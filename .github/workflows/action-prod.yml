name: Build, Publish and Deploy

on:
  push:
    branches:
      - main

env:
  DOCKER_REPOSITORY: techlabscc
  IMAGE_NAME: internal
  IMAGE_TAG: aftermarket_invoice_frontend_prod

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          file_name: '.env.production'
          envkey_ENVIRONMENT: production

          # Application API URL:
          envkey_NEXT_PUBLIC_BASE_URL: ${{ secrets.PROD_BASE_URL }}

          # Database
          envkey_DATABASE_URL: ${{ secrets.PROD_DATABASE_URL }}

          # S3 BUCKET
          envkey_NEXT_PUBLIC_BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          envkey_NEXT_PUBLIC_BUCKET_ACCESS_KEY: ${{ secrets.BUCKET_ACCESS_KEY }}
          envkey_NEXT_PUBLIC_BUCKET_SECRET_ACCESS_KEY: ${{ secrets.BUCKET_SECRET_ACCESS_KEY }}
          envkey_NEXT_PUBLIC_BUCKET_ENDPOINT: ${{ secrets.BUCKET_ENDPOINT }}
          envkey_NEXT_PUBLIC_BUCKET_REGION: ${{ secrets.BUCKET_REGION }}
          envkey_NEXT_PUBLIC_BUCKET_LOCATION: ${{ secrets.BUCKET_LOCATION }}

          envkey_BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          envkey_BUCKET_ACCESS_KEY: ${{ secrets.BUCKET_ACCESS_KEY }}
          envkey_BUCKET_SECRET_ACCESS_KEY: ${{ secrets.BUCKET_SECRET_ACCESS_KEY }}
          envkey_BUCKET_ENDPOINT: ${{ secrets.BUCKET_ENDPOINT }}
          envkey_BUCKET_REGION: ${{ secrets.BUCKET_REGION }}
          envkey_BUCKET_LOCATION: ${{ secrets.BUCKET_LOCATION }}
          envkey_JWT_SECRET_KEY: vo5dvomkkw23al2aomztj38f5
          envkey_JWT_EXPIRE_IN: 30d
          envkey_SALT_ROUND: 10
          envkey_SECRET_KEY: ${{ secrets.SECRET_KEY}}
          envkey_NEXT_PUBLIC_SECRET_KEY: ${{ secrets.SECRET_KEY}}

      - name: Build image
        run: docker build -f ./Dockerfile.prod -t ${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Push Image
        run: docker push ${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy-to-linode:
    runs-on: ubuntu-latest
    needs: build-and-publish

    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            # Stop and remove old container
            docker stop ${{ env.IMAGE_TAG }} || true
            docker rm ${{ env.IMAGE_TAG }} || true

            # Remove old image
            docker rmi ${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} || true

            # Pull new image
            docker pull ${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

            # Run new container
            docker run -d -p1002:1002 --name ${{ env.IMAGE_TAG }} ${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
